# Load packages
import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt

#Load data from the csv file
df = pd.read_csv('data/boat_data.csv', index_col=None)
df = df.rename(columns={'Number of views last 7 days': 'views_last7_days'})

df['Currency'] = df.Price.str.split(' ', expand = True)[0]
df['Price'] = df.Price.str.split(' ', expand = True)[1]
df['Price'] = df['Price'].astype(float)

# exchange convertion - quotation on June, 28th, 2022
df['Price US$'] = np.where(df['Currency'] == 'EUR',
                                           df['Price'] * 0.94,
                                           df['Price'])


df['Price US$'] = np.where(df['Currency'] == 'Â£',
                                           df['Price'] * 0.82,
                                           df['Price'])


df['Price US$'] = np.where(df['Currency'] == 'CHF',
                                           df['Price'] * 0.96,
                                           df['Price'])

df['Price US$'] = np.where(df['Currency'] == 'DKK',
                                           df['Price'] * 7.03,
                                           df['Price'])


#creating a dataframe to organize the most viewed boats and what they have in common
df_most_viewed = pd.DataFrame(df, columns= ['Boat Type', 'Price US$', 'views_last7_days', 'Type', 'Year Built', 'Length', 'Width', 'Material'])
df_most_viewed = df_most_viewed.sort_values(['views_last7_days'], ascending=[False])
df_most_viewed = df_most_viewed.head(20)
print('                The Most Viewed Boats')
print('')
df_print = df_most_viewed.to_string(index=False)
mean_width = df_most_viewed['Width'].mean()
mean_length = df_most_viewed['Length'].mean()
print(df_print)
print('mean width (most viewed) = ', mean_width.round(4))
print('mean length(most viewed) = ', mean_length)

# Boat type (boat style) most viewed
df_type = df_most_viewed.groupby('Boat Type', sort=False)["Boat Type"].count().reset_index(name ='Quantity')
df_type = df_type.sort_values(['Quantity'], ascending=[False])
df_print = df_type.to_string(index=False)
print('Boat Type most viewed boats')
print(df_print)

# Type (boat condition) most viewed 
df_type = df_most_viewed.groupby('Type', sort=False)["Type"].count().reset_index(name ='Quantity')
df_type = df_type.sort_values(['Quantity'], ascending=[False])
df_print = df_type.to_string(index=False)
print('Type most viewed boats')
print(df_print)

# Material most viewed
df_type = df_most_viewed.groupby('Material', sort=False)["Type"].count().reset_index(name ='Quantity')
df_type = df_type.sort_values(['Quantity'], ascending=[False])
df_print = df_type.to_string(index=False)
print('Material most viewed boats')
print(df_print)

# Year Built most viewed
df_type = df_most_viewed.groupby('Year Built', sort=False)["Year Built"].count().reset_index(name ='Quantity')
df_type = df_type.sort_values(['Quantity'], ascending=[False])
df_print = df_type.to_string(index=False)
print('Year Built most viewed boats')
print(df_print)

# Less viewed boats in the last 7 days
df_less_viewed = pd.DataFrame(df, columns= ['Boat Type', 'Price US$', 'views_last7_days', 'Type', 'Year Built', 'Length', 'Width', 'Material'])
df_less_viewed = df_less_viewed.sort_values(['views_last7_days'], ascending=[True])
df_less_viewed = df_less_viewed.head(20)
print('                The Less Viewed Boats')
print('')
df_print = df_less_viewed.to_string(index=False)
mean_width = df_less_viewed['Width'].mean()
mean_length = df_less_viewed['Length'].mean()
print(df_print)
print('mean width (less viewed) = ', mean_width)
print('mean length(less viewed) = ', mean_length)

# Boat type less viewed
df_type = df_less_viewed.groupby('Boat Type', sort=False)["Boat Type"].count().reset_index(name ='Quantity')
df_type = df_type.sort_values(['Quantity'], ascending=[True])
df_print = df_type.to_string(index=False)
print('Boat Type less viewed boats')
print(df_print)

# Type less viewed
df_type = df_less_viewed.groupby('Type', sort=False)["Type"].count().reset_index(name ='Quantity')
df_type = df_type.sort_values(['Quantity'], ascending=[True])
df_print = df_type.to_string(index=False)
print('Type less viewed boats')
print(df_print)

# Material less viewed
df_type = df_less_viewed.groupby('Material', sort=False)["Material"].count().reset_index(name ='Quantity')
df_type = df_type.sort_values(['Quantity'], ascending=[True])
df_print = df_type.to_string(index=False)
print('Material less viewed boats')
print(df_print)

# Year Built less viewed
df_type = df_less_viewed.groupby('Year Built', sort=False)["Year Built"].count().reset_index(name ='Quantity')
df_type = df_type.sort_values(['Quantity'], ascending=[True])
df_print = df_type.to_string(index=False)
print('Year Built less viewed boats')
print(df_print)

df_currency = df.groupby(['Currency'])['Currency'].count()
print(df_currency)

df_type = df.groupby('Boat Type', sort=False)["Boat Type"].count().reset_index(name ='Quantity')
df_type = df_type.sort_values(['Quantity'], ascending=[False])
df_print = df_type.to_string(index=False)
print(df_print)

df_material = df.groupby('Material', sort=False)["Material"].count().reset_index(name ='Quantity')
df_print = df_material.to_string(index=False)
print(df_print)

df_material.groupby(['Material']).sum().plot(kind='barh',y='Quantity', legend = False, color=['r', 'g', 'b', 'k', 'm', 'y'])

# GRP Glass Reinforced Plastic
plt.title('Material Types', fontsize=14)
##print('                   Products with higher Quantity of Sales')
plt.xlabel('Quantity')
plt.ylabel('Material')


###### Model Prediction #######
from sklearn import metrics
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_percentage_error
from sklearn.metrics import classification_report
from sklearn.naive_bayes import GaussianNB

#Load data from the csv file
df = df.rename(columns={'Price US$': 'Price1'})
df = df.rename(columns={'Year Built': 'Year'})

## preparing for test. The introductory survey is not always completed and the following fields are not even fullfiled: 
## Price, Width, Length and Year Built
data = df.dropna()
data = data.drop(data[data.Length < 1].index)
data = data.drop(data[data.Width < 1].index)
data = data.drop(data[data.Price1 < 1].index)
data = data.drop(data[data.Year < 1].index)

X = np.array([data.Width.astype(float), data.Length.astype(float), data.Price1, data.Year.astype(float)])
X = np.transpose(X)
y = data.views_last7_days.astype(float)

X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.4, shuffle=True, random_state=42)

lnr = LinearRegression()
lnr.fit(X_train, y_train)
predictions = lnr.predict(X_test)

print('Percentage Error Prediction for Viewing List',round(mean_absolute_percentage_error(y_test, predictions)*100,2))





